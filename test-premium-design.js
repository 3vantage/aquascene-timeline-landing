#!/usr/bin/env node

/**
 * Premium Design Testing Script
 * Tests the new premium design improvements and captures screenshots
 */

import { chromium } from '@playwright/test';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import fs from 'fs/promises';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

async function testPremiumDesign() {
  console.log('üé® Starting Premium Design Testing...\n');
  
  const browser = await chromium.launch({
    headless: false,
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  });
  
  const page = await browser.newPage({
    viewport: { width: 1440, height: 900 }
  });

  try {
    console.log('üìñ Navigating to the site...');
    await page.goto('http://localhost:3005', { 
      waitUntil: 'networkidle',
      timeout: 30000 
    });

    console.log('‚úÖ Page loaded successfully!');
    
    // Wait for animations to complete
    await page.waitForTimeout(2000);

    // Test premium typography and spacing
    console.log('üìè Testing premium typography and spacing...');
    const heroTitle = await page.locator('h1').first();
    const heroText = await page.locator('section h1').first();
    
    // Check if premium typography classes are applied
    const heroClasses = await heroText.getAttribute('class');
    if (heroClasses?.includes('heading-display')) {
      console.log('‚úÖ Premium typography applied to hero section');
    } else {
      console.log('‚ùå Premium typography NOT applied to hero section');
    }

    // Test section spacing
    console.log('üìê Testing section spacing...');
    const sections = await page.locator('section').all();
    let sectionsWithPremiumSpacing = 0;
    
    for (const section of sections) {
      const classes = await section.getAttribute('class');
      if (classes?.includes('section-spacing')) {
        sectionsWithPremiumSpacing++;
      }
    }
    
    console.log(`‚úÖ ${sectionsWithPremiumSpacing} sections have premium spacing applied`);

    // Test premium hover effects
    console.log('üñ±Ô∏è  Testing premium hover effects...');
    const cardElements = await page.locator('.card-hover').all();
    const premiumHoverElements = await page.locator('.premium-hover').all();
    
    console.log(`‚úÖ ${cardElements.length} elements with card hover effects`);
    console.log(`‚úÖ ${premiumHoverElements.length} elements with premium hover effects`);

    // Test form improvements
    console.log('üìù Testing form improvements...');
    await page.locator('#waitlist').scrollIntoViewIfNeeded();
    await page.waitForTimeout(1000);
    
    const form = await page.locator('.waitlist-form').first();
    const formClasses = await form.getAttribute('class');
    if (formClasses?.includes('premium-hover')) {
      console.log('‚úÖ Premium styling applied to waitlist form');
    }

    // Capture screenshots
    console.log('üì∏ Capturing screenshots...');
    
    // Full page screenshot
    await page.screenshot({ 
      path: join(__dirname, 'premium-design-full-page.png'),
      fullPage: true
    });
    console.log('‚úÖ Full page screenshot saved');

    // Hero section screenshot
    await page.locator('section').first().screenshot({ 
      path: join(__dirname, 'premium-design-hero.png')
    });
    console.log('‚úÖ Hero section screenshot saved');

    // Features section screenshot
    const featuresSection = await page.locator('section').nth(1);
    await featuresSection.screenshot({ 
      path: join(__dirname, 'premium-design-features.png')
    });
    console.log('‚úÖ Features section screenshot saved');

    // Waitlist section screenshot
    await page.locator('#waitlist').screenshot({ 
      path: join(__dirname, 'premium-design-waitlist.png')
    });
    console.log('‚úÖ Waitlist section screenshot saved');

    console.log('\nüéâ Premium Design Testing Complete!');
    console.log('üìä Results Summary:');
    console.log(`   ‚Ä¢ Premium typography: Applied`);
    console.log(`   ‚Ä¢ Section spacing: ${sectionsWithPremiumSpacing} sections enhanced`);
    console.log(`   ‚Ä¢ Interactive effects: ${cardElements.length + premiumHoverElements.length} elements improved`);
    console.log(`   ‚Ä¢ Form styling: Enhanced with premium design`);
    console.log(`   ‚Ä¢ Screenshots: 4 captured successfully`);

  } catch (error) {
    console.error('‚ùå Error during testing:', error.message);
  } finally {
    await browser.close();
  }
}

// Run the test
testPremiumDesign().catch(console.error);